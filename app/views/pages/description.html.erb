<!DOCTYPE html>
<html>
<head>
    <title>Тестовое задание</title>
</head>
<body>
    <h1 align="center">Тестовое задание</h1>
<h2 align="center">Интернет-магазин на Ruby on Rails</h2>
	<p>Требуется реализовать интернет-магазин, удовлетворяющий следующим 
	требованиям:</p>
<ul>
	<li>система регистрации и аутентификации пользователей&#894;</li>
	<li>разграничение прав пользователей по ролям (незарегистрированный 
	пользователь, зарегистрированный пользователь, администратор)&#894;</li>
	<li>страница для отображения списка категорий товаров, оформленного в виде 
	меню&#894; при выборе какой-либо категории на странице отображается список 
	товаров этой категории&#894; если никакая категория не выбрана, отображается 
	список из десяти самых продаваемых товаров&#894;</li>
	<li>возможность добавлять товары в «корзину» с выбором кол-ва добавляемого 
	товара&#894;</li>
	<li>состояние корзины должно сохраняться для аутентифицированных 
	пользователей&#894;</li>
	<li>система скидок при покупке энного кол-ва товара&#894; скидка привязана к 
	категории товаров и может различаться для различных категорий или 
	отсутствовать для каких-то категорий вовсе&#894;</li>
	<li>страница просмотра «корзины» с возможностью удаления товаров и 
	редактирования кол-ва товаров с автоматическим пересчетом итоговой суммы&#894;</li>
	<li>страница оформления заказа&#894; для успешного оформления требуется 
	авторизация и заполнение формы доставки заказа&#894; засчитывать покупку товара 
	по факту успешного оформления заказа, реализация биллинга не требуется&#894;</li>
	<li>страница администрирования, позволяющая пользователям с 
	соответствующей ролью редактировать список категорий и список товаров в 
	каждой категории, а также список зарегистрированных пользователей с 
	возможностью блокировки&#894;</li>
	<li>все действия, кроме перехода на другую страницу, должны осуществляться 
	асинхронно и не вызывать перезагрузку текущей страницы&#894;</li>
	<li>веб-сайт не общается с базой данных напрямую, а использует для этого 
	промежуточный слой веб-сервисов.</li>
</ul>
<p>За исключением указанных выше требований все остальные решения по 
архитектуре, дизайну пользовательского интерфейса и оформлению принимаются 
непосредственно исполнителем. Неоспоримым плюсом будет являться использование 
AngularJS и наличие качественной верстки с применением CSS.</p>
<p>Результат: &#8203; код, присланный в одном zip-архиве, инструкции по развёртыванию 
проекта (если будут требоваться дополнительные действия кроме стандартных для 
RoR-приложения)</p>
</body>
</html>